---
title: WindowsのSKKでACT(Dvorak版AZIK)
---
%div
  %a(href='/') [TOP]
%h3.section ACTとは
%p
  %div
    <a href="http://hp.vector.co.jp/authors/VA002116/azik/azikindx.htm">ACT</a>というのはDvorak配列で日本語を入力しやすくするローマ字体系（？）です．
  %div
    Dvorak配列というのはあくまで英語を打ち易くするための配列であり，日本語のことは考慮されていません．
  %div
    例えばDvorakでkのキーはQwertryで言うところのvの位置にあるため，か行である「ka,ki,ku,ke,ko」は結構打ちにくいです．そこで，か行を「ca,ci,cu,ce,co」に割り当てると左右の手を均等に使えて打ち易くなります．
  %div
    ACTはさらにそれに加えて例えば「しょう」を「shou」ではなく「ss」に割り当てるなどして日本語を打ちやすくかつ，打鍵数を減らす工夫をしています．
%p
  %div
    こういう省打鍵かな入力方式としては他にも <a href="http://www7.plala.or.jp/dvorakjp/">DvorakJP</a> や <a href="http://www.mikage.to/jlod/">JLOD </a>や蒼星配列などがあり，さらに人それぞれ好きなように改変して使っています．
  %div
    ACTには元祖ACTと2009年に考案された <a href="http://www1.vecceed.ne.jp/~bemu/act/act09_doc.html">ACT09</a>という物がありますが，emacsやuimでデフォルトで使えるという理由で私は前者を使っています．


%h3.section ACTの各ソフトの対応状況
%dl
  %dt Emacs
  %dd ddskkにはskk-act.elが含まれているので，.emacsに <kbd>(setq skk-use-act t)</kbd> を追加するだけで使えます．
  %dt Linux
  %dd uimのversion1.6.0以降でskk-actモードが使えます．
  %dt Windows
  %dd <a href='http://blechmusik.xii.jp/dvorakj/'>DvorakJ</a> を使えばMicrosoft IME, ATOK, Google日本語入力でACTを使用することができます &rArr; <a href='dvorakj-act.zip'>DvorakJ用ACT日本語入力配列の設定ファイル</a>
%h3.section WindowsのSKKの近況(2013年現在)
%p
  <a href="http://ja.wikipedia.org/wiki/SKK">SKK</a> はシンプルな日本語入力方式です．近代的なMicrosoft IMEやGoogle日本語入力などは「機械が漢字や送り仮名を推定」するのですが，
  SKKはそういう解析は一切行わず，「人間が明示的に漢字部分と送り仮名部分を指定」します．
  古典的ですが今でもそこそこ（ほんの少しだけ？）人気の日本語入力方式です．
%p
  WindowsでSKKを使用する手段としては昔からある <a href="http://homepage3.nifty.com/monjya/index.jis.html">SKKIME</a> と最近登場した <a href="https://code.google.com/p/corvus-skk/">CorvusSKK</a>，<a href="http://coexe.web.fc2.com/skkfep.html">SKK日本語入力FEP</a> がありますが，個人的にはCorvusSKKが一番オススメです．
%p
  以下の章ではSKKIMEおよびCorvusSKKでACTを使う方法を説明します．SKK日本語入力FEPは私は試していないのですが説明によるとデフォルトでACTが使えるみたいです．

%h3.section SKKIMEでACTを使えるようにする
%div
  動作確認済みOS: Windows XP/Vista/7
%div
  SKKIMEバージョン: 1.5
%dl
  %dt 注意事項
  %dd
    %ul
      %li skk-toggle-kana(カタカナモード)は = キーです．
      %li「勝った」「言った」など「っ」が送り仮名のものはうまく変換できないので「勝つ」「言う」などに変換してから送り仮名を削除して下さい．
      %li「安全」「音楽」など「;」「Q」で始まる漢字はうまく変換できないので「Ann」「Onn」などと打って下さい．
%dl
  %dt 使用方法
  %dd
    %ol
      %li <a href="skkime-act.zip">skkime-act.zip</a> をダウンロードする．
      %li 展開するとskkime-act.regファイルが出来るので，右クリックして「結合」．
      %li SKKIMEのプロパティの「キー設定」→「ローマ字設定」を「標準」から「ユーザ定義」に変更する．
      %li ローマ字設定の右の方にある「変更」ボタンをクリックしてACT配列であることを確認する．

%h3.section CorvusSKKでACTを使えるようにする
%p
  <a href="https://code.google.com/p/corvus-skk/downloads/list">配布されているCorvusSKK</a>を展開すると中にconfig-sample.7zというファイルがあり，その中に <kbd>config - act.xml</kbd> があるので，それをCorvusSKKの<kbd>config.xml</kbd>に上書きします．Windows7なら <kbd>C:\Users\ユーザ\AppData\Roaming\CorvusSKK\config.xml</kbd> です．
%p
  %div
    ただしCorvusSKK version 0.9.8現在「勝った」「言った」など「っ」が送り仮名のものはうまく変換できないという不具合（？）があります．
  %div
    そこで苦肉の策としてSKKの辞書であるSKK-JISYO.Lの方に手を加えてやります．具体的には，「かt /勝/買/飼/刈/」となっている行に「かっ /勝っ/買っ/飼っ/刈っ/」を追加してやります．
%p
  手動でこれを行うのは面倒だと思うのでRuby1.9用の簡単なスクリプトを書いてみました．
  %code
    $ ./skk-jisyo-filter.rb &lt; SKK-JISYO.L &gt; SKK-JISYO.L.new 
  のように変換してこの SKK-JISYO.L.new をCorvusSKKに読み込ませれば完了です．
  %pre
    &nbsp;
    :plain
      #!/usr/bin/ruby19
      #-*- coding:utf-8 -*-
      $stdin.set_encoding("EUC-JP","UTF-8")
      $stdout.set_encoding("EUC-JP")
      $&lt;.each{|line|
        line.chomp!
        if /^(\p{Hiragana}+)t / =~ line then
          print $1 + "っ "
          puts "/" + $'.sub(/^\//,"").sub(/\/$/,"").split("/").map{|words|
            (w,comment) = words.split(";")
            w + "っ" + if comment then ";"+comment else "" end
          }.join("/") + "/"
        end
        puts line
      }
